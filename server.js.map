{"version":3,"file":"server.js","sources":["webpack:///webpack/bootstrap 9f4ed23c051076864cc1","webpack:///external \"react\"","webpack:///external \"react-redux\"","webpack:///external \"prop-types\"","webpack:///src/actions/postActions.js","webpack:///src/actions/types.js","webpack:///external \"redux\"","webpack:///external \"path\"","webpack:///server/index.js","webpack:///external \"express\"","webpack:///server/middleware/renderer.js","webpack:///external \"react-dom/server\"","webpack:///src/App.js","webpack:///src/components/Posts.js","webpack:///external \"isomorphic-fetch\"","webpack:///src/components/Postform.js","webpack:///src/store.js","webpack:///external \"redux-thunk\"","webpack:///src/reducers/index.js","webpack:///src/reducers/postReducer.js","webpack:///external \"fs\""],"sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 7);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap 9f4ed23c051076864cc1","module.exports = require(\"react\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"react\"\n// module id = 0\n// module chunks = 0","module.exports = require(\"react-redux\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"react-redux\"\n// module id = 1\n// module chunks = 0","module.exports = require(\"prop-types\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"prop-types\"\n// module id = 2\n// module chunks = 0","import { FETCH_POSTS, NEW_POST } from './types';\nimport fetch from 'isomorphic-fetch';\n\nexport const fetchPosts = () => dispatch => {\n  fetch('https://jsonplaceholder.typicode.com/posts')\n    .then(res => res.json())\n    .then(posts =>\n      dispatch({\n        type: FETCH_POSTS,\n        payload: posts\n      })\n    );\n};\n\nexport const createPost = postData => dispatch => {\n  fetch('https://jsonplaceholder.typicode.com/posts', {\n    method: 'POST',\n    headers: {\n      'content-type': 'application/json'\n    },\n    body: JSON.stringify(postData)\n  })\n    .then(res => res.json())\n    .then(post =>\n      dispatch({\n        type: NEW_POST,\n        payload: post\n      })\n    );\n};\n\n\n// WEBPACK FOOTER //\n// src/actions/postActions.js","export const FETCH_POSTS = 'FETCH_POSTS';\nexport const NEW_POST = 'NEW_POST';\n\n\n// WEBPACK FOOTER //\n// src/actions/types.js","module.exports = require(\"redux\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"redux\"\n// module id = 5\n// module chunks = 0","module.exports = require(\"path\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"path\"\n// module id = 6\n// module chunks = 0","import express from 'express';\n\n// we'll talk about this in a minute:\nimport serverRenderer from './middleware/renderer';\n\nconst PORT = process.env.PORT || 3000;\n\n// initialize the application and create the routes\nconst app = express();\n\n// root (/) should always serve our server rendered page\napp.use('*', serverRenderer);\n\n// other static resources should just be served as they are\napp.use(express.static('build', { maxAge: '30d' }));\n\n// start the app\napp.listen(PORT, (error) => {\n    if (error) {\n        return console.log('something bad happened', error);\n    }\n\n    console.log(\"listening on \" + PORT + \"...\");\n});\n\n\n// WEBPACK FOOTER //\n// server/index.js","module.exports = require(\"express\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"express\"\n// module id = 8\n// module chunks = 0","import React from 'react';\nimport ReactDOMServer from 'react-dom/server';\n\n// import our main App component\nimport App from '../../src/App';\n\nconst path = require(\"path\");\nconst fs = require(\"fs\");\n\nexport default (req, res, next) => {\n\n    // point to the html file created by CRA's build tool\n    const filePath = path.resolve('build', 'index.html');\n\n    fs.readFile(filePath, 'utf8', (err, htmlData) => {\n        if (err) {\n            console.error('err', err);\n            return res.status(404).end()\n        }\n\n        // render the app as a string\n        const html = ReactDOMServer.renderToString(<App />);\n\n        // inject the rendered app into our html and send it\n        return res.send(\n            htmlData.replace(\n                '<div id=\"root\"></div>',\n                `<div id=\"root\">${html}</div>`\n            )\n        );\n    });\n}\n\n\n// WEBPACK FOOTER //\n// server/middleware/renderer.js","module.exports = require(\"react-dom/server\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"react-dom/server\"\n// module id = 10\n// module chunks = 0","import React, { Component } from 'react';\n// import logo from './logo.svg';\nimport './App.css';\nimport { Provider } from 'react-redux';\n\nimport Posts from './components/Posts';\nimport PostForm from './components/Postform';\n\nimport store from './store';\n\nclass App extends Component {\n  render() {\n    return (\n      <Provider store={store}>\n        <div className=\"App\">\n          <header className=\"App-header\">\n            {/* <img src={logo} className=\"App-logo\" alt=\"logo\" /> */}\n            <h1 className=\"App-title\">Welcome to React</h1>\n          </header>\n          <PostForm />\n          <hr />\n          <Posts />\n        </div>\n      </Provider>\n    );\n  }\n}\n\nexport default App;\n\n\n\n// WEBPACK FOOTER //\n// src/App.js","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { fetchPosts } from '../actions/postActions';\n\nclass Posts extends Component {\n  componentWillMount() {\n    this.props.fetchPosts();\n  }\n\n  componentWillReceiveProps(nextProps) {\n    if (nextProps.newPost) {\n      this.props.posts.unshift(nextProps.newPost);\n    }\n  }\n\n  render() {\n    const postItems = this.props.posts.map(post => (\n      <div key={post.id}>\n        <h3>{post.title}</h3>\n        <p>{post.body}</p>\n      </div>\n    ));\n    return (\n      <div>\n        <h1>Posts</h1>\n        {postItems}\n      </div>\n    );\n  }\n}\n\nPosts.propTypes = {\n  fetchPosts: PropTypes.func.isRequired,\n  posts: PropTypes.array.isRequired,\n  newPost: PropTypes.object\n};\n\nconst mapStateToProps = state => ({\n  posts: state.posts.items,\n  newPost: state.posts.item\n});\n\nexport default connect(mapStateToProps, { fetchPosts })(Posts);\n\n\n// WEBPACK FOOTER //\n// src/components/Posts.js","module.exports = require(\"isomorphic-fetch\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"isomorphic-fetch\"\n// module id = 14\n// module chunks = 0","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { createPost } from '../actions/postActions';\n\nclass PostForm extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      title: '',\n      body: ''\n    };\n\n    this.onChange = this.onChange.bind(this);\n    this.onSubmit = this.onSubmit.bind(this);\n  }\n\n  onChange(e) {\n    this.setState({ [e.target.name]: e.target.value });\n  }\n\n  onSubmit(e) {\n    e.preventDefault();\n\n    const post = {\n      title: this.state.title,\n      body: this.state.body\n    };\n\n    this.props.createPost(post);\n  }\n\n  render() {\n    return (\n      <div>\n        <h1>Add Post</h1>\n        <form onSubmit={this.onSubmit}>\n          <div>\n            <label>Title: </label>\n            <br />\n            <input\n              type=\"text\"\n              name=\"title\"\n              onChange={this.onChange}\n              value={this.state.title}\n            />\n          </div>\n          <br />\n          <div>\n            <label>Body: </label>\n            <br />\n            <textarea\n              name=\"body\"\n              onChange={this.onChange}\n              value={this.state.body}\n            />\n          </div>\n          <br />\n          <button type=\"submit\">Submit</button>\n        </form>\n      </div>\n    );\n  }\n}\n\nPostForm.propTypes = {\n  createPost: PropTypes.func.isRequired\n};\n\nexport default connect(null, { createPost })(PostForm);\n\n\n// WEBPACK FOOTER //\n// src/components/Postform.js","import { createStore, applyMiddleware } from 'redux';\nimport thunk from 'redux-thunk';\nimport rootReducer from './reducers';\n\nconst initialState = {};\n\nconst middleware = [thunk];\n\nconst store = createStore(\n    rootReducer,\n    initialState,\n    applyMiddleware(...middleware)\n);\n\nexport default store;\n\n\n// WEBPACK FOOTER //\n// src/store.js","module.exports = require(\"redux-thunk\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"redux-thunk\"\n// module id = 17\n// module chunks = 0","import { combineReducers } from 'redux';\nimport postReducer from './postReducer';\n\nexport default combineReducers({\n  posts: postReducer\n});\n\n\n// WEBPACK FOOTER //\n// src/reducers/index.js","import { FETCH_POSTS, NEW_POST } from '../actions/types';\n\nconst initialState = {\n  items: [],\n  item: {}\n};\n\nexport default function(state = initialState, action) {\n  switch (action.type) {\n    case FETCH_POSTS:\n      return {\n        ...state,\n        items: action.payload\n      };\n    case NEW_POST:\n      return {\n        ...state,\n        item: action.payload\n      };\n    default:\n      return state;\n  }\n}\n\n\n// WEBPACK FOOTER //\n// src/reducers/postReducer.js","module.exports = require(\"fs\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"fs\"\n// module id = 20\n// module chunks = 0"],"mappings":";;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;AC7DA;;;;;;ACAA;;;;;;ACAA;;;;;;;ACAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAAA;AACA;AACA;AAAA;AACA;AAEA;AACA;AAFA;AADA;AAMA;AATA;AACA;AAUA;AAAA;AACA;AACA;AACA;AACA;AADA;AAGA;AALA;AAOA;AAAA;AACA;AAEA;AACA;AAFA;AADA;AAMA;AAfA;;;;;;;ACdA;AAAA;AAAA;AACA;;;;;;ACDA;;;;;;ACAA;;;;;;;ACAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;ACvBA;;;;;;;;;;;;;;;;;ACAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAMA;AACA;;;;;;AC/BA;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAFA;AAIA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAPA;AADA;AAYA;;;;AAfA;AACA;AAiBA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AC5BA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;AACA;AACA;AACA;;;AAEA;AACA;AACA;AACA;AACA;;;AAEA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAFA;AADA;AAMA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAFA;AAKA;;;;AAxBA;AACA;AA0BA;AACA;AACA;AACA;AAHA;AACA;AAKA;AAAA;AACA;AACA;AAFA;AAAA;AACA;AAIA;;;;;;AC3CA;;;;;;;;;;;;;;;;;;;;;;;;;;ACAA;AACA;AACA;AACA;AACA;AACA;;;AACA;AAAA;AACA;AADA;AACA;AACA;AACA;AACA;AAFA;AACA;AAIA;AACA;AARA;AASA;AACA;;;AACA;AACA;AACA;;;AAEA;AACA;AACA;AACA;AACA;AACA;AAFA;AACA;AAIA;AACA;;;AAEA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AAJA;AAAA;AAAA;AAAA;AAAA;AAAA;AAHA;AAUA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAHA;AAAA;AAAA;AAAA;AAAA;AAAA;AAHA;AASA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAtBA;AAFA;AA4BA;;;;AAzDA;AACA;AA2DA;AACA;AADA;AACA;AAGA;;;;;;;ACrEA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAKA;;;;;;ACdA;;;;;;;ACAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AADA;;;;;;;ACHA;AAAA;AACA;AACA;AACA;AACA;AAFA;AACA;AAIA;AAAA;AAAA;AACA;AAAA;AACA;AACA;AAEA;AAFA;AAIA;AACA;AAEA;AAFA;AAIA;AACA;AAZA;AAcA;;;;;;ACtBA;;;A","sourceRoot":""}